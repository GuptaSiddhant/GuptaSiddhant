{
  "version": 3,
  "sources": ["../src/index.tsx", "../src/components/Header.tsx", "../src/components/Footer.tsx", "../src/components/Navigation.tsx", "../src/components/Tabs.tsx", "../src/Router.tsx", "../src/pages/index.tsx", "../src/components/misc.tsx", "../src/pages/Education.tsx", "../src/helpers/useQuery.ts", "../src/components/DateLine.tsx", "../src/pages/Career.tsx", "../src/pages/Projects.tsx", "../src/pages/About.tsx", "../src/helpers/useBoxWidth.ts"],
  "sourcesContent": ["#!/usr/bin/env node\n\nimport React from \"react\";\nimport { render, Box } from \"ink\";\n\nimport Header from \"./components/Header\";\nimport Footer from \"./components/Footer\";\nimport Navigation from \"./components/Navigation\";\nimport { RouterProvider } from \"./Router\";\nimport Page from \"./pages\";\nimport { Divider } from \"./components/misc\";\nimport useBoxWidth from \"./helpers/useBoxWidth\";\n\nfunction App(): JSX.Element {\n  const { ref, width } = useBoxWidth();\n\n  return (\n    <Box\n      ref={ref}\n      flexDirection=\"column\"\n      paddingY={1}\n      paddingX={2}\n      borderStyle=\"bold\"\n    >\n      <RouterProvider>\n        <Header />\n        <Navigation />\n        <Divider width={width - 6} />\n        <Page />\n        <Divider width={width - 6} />\n        <Footer />\n      </RouterProvider>\n    </Box>\n  );\n}\n\nconsole.clear();\nconsole.clear();\nrender(<App />);\n", "import React from \"react\";\nimport { Text, Box, Newline } from \"ink\";\n\nconst name = \"Siddhant Gupta\";\nconst title = \"Frontend and UI Developer\";\n\nexport default function Header() {\n  const formattedName = name.split(\"\").join(\" \").toUpperCase();\n\n  return (\n    <Box width=\"100%\" marginBottom={1} justifyContent=\"space-between\">\n      <Text>\n        <Text color=\"green\" bold>\n          {formattedName}\n        </Text>\n        <Newline />\n        <Text color=\"yellow\">{title}</Text>\n      </Text>\n\n      <Text>\n        <Text dimColor>Full portfolio at:</Text>\n        <Newline />\n        <Text>https://guptasiddhant.com</Text>\n      </Text>\n    </Box>\n  );\n}\n", "import React from \"react\";\nimport open from \"open\";\nimport { Text, Box, useInput, useApp } from \"ink\";\n\nexport default function Footer() {\n  const shortcuts = useShortcuts();\n\n  return (\n    <Box width=\"100%\" justifyContent=\"space-between\">\n      {shortcuts.map(({ key, label }) => (\n        <Text key={key} dimColor>\n          [{key}] {label}\n        </Text>\n      ))}\n      <Text dimColor>[x] Exit</Text>\n    </Box>\n  );\n}\n\nfunction useShortcuts() {\n  const shortcuts: Array<{ key: string; label: string; url?: string }> = [\n    { key: \"w\", label: \"Website\", url: \"https://guptasiddhant.com\" },\n    { key: \"g\", label: \"GitHub\", url: \"https://github.com/guptasiddhant\" },\n    {\n      key: \"l\",\n      label: \"LinkedIn\",\n      url: \"https://linkedin.com/in/guptasiddhant9\",\n    },\n    { key: \"e\", label: \"E-mail\", url: \"mailto:me@guptasiddhant.com\" },\n  ];\n\n  const { exit } = useApp();\n\n  useInput((input) => {\n    if (input === \"x\" || input === \"X\") exit();\n    shortcuts.forEach(({ key, url }) => {\n      if ([key.toLowerCase(), key.toUpperCase()].includes(input)) {\n        if (url) return open(url);\n      }\n    });\n  });\n\n  return shortcuts;\n}\n", "import React from \"react\";\nimport { Tab, Tabs } from \"./Tabs\";\n\nimport routes, { Route, useRouter } from \"../Router\";\n\nexport default function Navigation(): JSX.Element {\n  const [activeRoute, setActiveRoute] = useRouter();\n\n  return (\n    <Tabs\n      defaultValue={activeRoute}\n      onChange={(name: Route) => setActiveRoute(name)}\n      width=\"100%\"\n    >\n      {routes.map((value) => (\n        <Tab name={value} key={value} children={value} />\n      ))}\n    </Tabs>\n  );\n}\n", "import React from \"react\";\nimport readline from \"readline\";\nimport { Box, StdinProps, BoxProps, Text, useStdin, TextProps } from \"ink\";\n\n/**\n * Represent props of a <Tab>\n */\nexport interface TabProps {\n  name: string;\n}\n\n/**\n * A <Tab> component\n */\n// eslint-disable-next-line react/prop-types\nconst Tab: React.FunctionComponent<TabProps> = ({ children }) => (\n  <>{children}</>\n);\n\n/**\n * Declare how does the keyboard interacts with ink-tab here\n */\ninterface KeyMapProps {\n  useNumbers?: boolean;\n  useTab?: boolean;\n  previous?: string[];\n  next?: string[];\n}\n\ninterface RequiredKeyMapProps {\n  useNumbers: boolean;\n  useTab: boolean;\n  previous: string[];\n  next: string[];\n}\n\n/**\n * Props for the <Tabs> component\n */\nexport interface TabsProps {\n  /**\n   * A function called whenever a tab is changing.\n   * @param {string} name the name of the tab passed in the `name` prop\n   * @param {React.Component<TabProps>} activeTab the current active tab component\n   */\n  onChange(name: string, activeTab: React.ReactElement<typeof Tab>): void;\n  children: React.ReactElement<typeof Tab>[];\n  flexDirection?: BoxProps[\"flexDirection\"];\n  width?: BoxProps[\"width\"];\n  keyMap?: KeyMapProps;\n  isFocused?: boolean;\n  defaultValue?: string;\n}\ninterface TabsWithStdinProps extends TabsProps {\n  isRawModeSupported: boolean;\n  setRawMode: StdinProps[\"setRawMode\"];\n  stdin: StdinProps[\"stdin\"];\n}\n\ninterface TabsWithStdinState {\n  activeTab: number;\n}\n\nclass TabsWithStdin extends React.Component<\n  TabsWithStdinProps,\n  TabsWithStdinState\n> {\n  // eslint-disable-next-line react/sort-comp\n  private defaultKeyMap: RequiredKeyMapProps;\n\n  public static defaultProps = {\n    flexDirection: \"row\",\n    keyMap: null,\n    isFocused: null, // isFocused is null mean that the focus not handle by ink\n    defaultValue: null,\n  };\n\n  constructor(props: TabsWithStdinProps) {\n    super(props);\n\n    this.handleTabChange = this.handleTabChange.bind(this);\n    this.handleKeyPress = this.handleKeyPress.bind(this);\n    this.moveToNextTab = this.moveToNextTab.bind(this);\n    this.moveToPreviousTab = this.moveToPreviousTab.bind(this);\n\n    this.state = {\n      activeTab: 0,\n    };\n\n    this.defaultKeyMap = {\n      useNumbers: true,\n      useTab: true,\n      previous: [this.isColumn() ? \"up\" : \"left\"],\n      next: [this.isColumn() ? \"down\" : \"right\"],\n    };\n  }\n\n  componentDidMount(): void {\n    const { stdin, setRawMode, isRawModeSupported, children, defaultValue } =\n      this.props;\n\n    if (isRawModeSupported && stdin) {\n      // use ink / node `setRawMode` to read key-by-key\n      if (setRawMode) {\n        setRawMode(true);\n      }\n\n      readline.emitKeypressEvents(stdin);\n      stdin.on(\"keypress\", this.handleKeyPress);\n    }\n\n    // select defaultValue if it's valid otherwise select the first tab on component mount\n    let initialTabIndex = 0;\n\n    if (defaultValue) {\n      const foundIndex = children.findIndex(\n        (child) => child.props.name === defaultValue\n      );\n\n      if (foundIndex > 0) {\n        initialTabIndex = foundIndex;\n      }\n    }\n\n    this.handleTabChange(initialTabIndex);\n  }\n\n  componentWillUnmount(): void {\n    const { stdin, setRawMode, isRawModeSupported } = this.props;\n\n    if (isRawModeSupported && stdin) {\n      if (setRawMode) {\n        setRawMode(false); // remove set raw mode, as it might interfere with CTRL-C\n      }\n      stdin.removeListener(\"keypress\", this.handleKeyPress);\n    }\n  }\n\n  handleTabChange(tabId: number): void {\n    const { children, onChange } = this.props;\n\n    const tab = children[tabId];\n\n    if (!tab) {\n      return;\n    }\n\n    this.setState({\n      activeTab: tabId,\n    });\n\n    onChange(tab.props.name, tab);\n  }\n\n  handleKeyPress(\n    ch: string,\n    key: null | { name: string; shift: boolean; meta: boolean }\n  ): void {\n    const { keyMap, isFocused } = this.props;\n\n    if (!key || isFocused === false) {\n      return;\n    }\n\n    const currentKeyMap = { ...this.defaultKeyMap, ...keyMap };\n    const { useNumbers, useTab, previous, next } = currentKeyMap;\n\n    if (previous.some((keyName) => keyName === key.name)) {\n      this.moveToPreviousTab();\n    }\n\n    if (next.some((keyName) => keyName === key.name)) {\n      this.moveToNextTab();\n    }\n\n    switch (key.name) {\n      case \"tab\": {\n        if (!useTab || isFocused !== null) {\n          // if isFocused != null, then the focus is managed by ink and thus we can not use this key\n          return;\n        }\n\n        if (key.shift === true) {\n          this.moveToPreviousTab();\n        } else {\n          this.moveToNextTab();\n        }\n\n        break;\n      }\n\n      default:\n        break;\n    }\n  }\n\n  isColumn(): boolean {\n    const { flexDirection } = this.props;\n\n    return flexDirection === \"column\" || flexDirection === \"column-reverse\";\n  }\n\n  moveToNextTab(): void {\n    const { children } = this.props;\n    const { activeTab } = this.state;\n\n    let nextTabId = activeTab + 1;\n    if (nextTabId >= children.length) {\n      nextTabId = 0;\n    }\n\n    this.handleTabChange(nextTabId);\n  }\n\n  moveToPreviousTab(): void {\n    const { children } = this.props;\n    const { activeTab } = this.state;\n\n    let nextTabId = activeTab - 1;\n    if (nextTabId < 0) {\n      nextTabId = children.length - 1;\n    }\n\n    this.handleTabChange(nextTabId);\n  }\n\n  render(): React.ReactNode {\n    const { children, flexDirection, width, isFocused, ...rest } = this.props;\n    const { activeTab } = this.state;\n\n    const separatorWidth = width || 6;\n\n    const separator = this.isColumn()\n      ? new Array(separatorWidth).fill(\"\u2500\").join(\"\")\n      : \" | \";\n\n    return (\n      <Box\n        flexDirection={flexDirection}\n        width={width}\n        {...rest}\n        justifyContent=\"space-between\"\n        marginBottom={1}\n      >\n        {children.map((child, key) => {\n          const { name } = child.props;\n          let textProps: TextProps = {};\n          if (isFocused !== false) {\n            textProps = {\n              backgroundColor: activeTab === key ? \"cyan\" : undefined,\n              color: activeTab === key ? \"black\" : undefined,\n            };\n          } else {\n            textProps = {\n              color: activeTab === key ? \"cyan\" : undefined,\n              dimColor: activeTab === key ? undefined : true,\n            };\n          }\n\n          return (\n            <Box key={name}>\n              <Text {...textProps}>{` ${name} `}</Text>\n            </Box>\n          );\n        })}\n      </Box>\n    );\n  }\n}\n\n/**\n * The <Tabs> component\n */\nconst Tabs: React.FunctionComponent<TabsProps> = (props) => {\n  const { isRawModeSupported, stdin, setRawMode } = useStdin();\n\n  return (\n    <TabsWithStdin\n      isRawModeSupported={isRawModeSupported}\n      stdin={stdin}\n      setRawMode={setRawMode}\n      {...props}\n    />\n  );\n};\n\nexport { Tab, Tabs };\n", "import React, { createContext, useContext } from \"react\";\nimport type { Dispatch, SetStateAction } from \"react\";\n\nconst Routes = [\n  \"About\",\n  \"Career\",\n  \"Education\",\n  \"Projects\",\n  // \"Blog\"\n] as const;\n\nexport type Route = typeof Routes[number];\n\nexport default Routes;\n\nexport type RouterState = [Route, Dispatch<SetStateAction<Route>>];\n\nconst initialRoute = Routes[0];\n\nconst RouterContext = createContext<RouterState>([initialRoute, () => {}]);\n\nexport function useRouter() {\n  return useContext(RouterContext);\n}\n\nexport function RouterProvider({\n  children,\n}: {\n  children: React.ReactNode;\n}): JSX.Element {\n  const routerState = React.useState<Route>(initialRoute);\n\n  return (\n    <RouterContext.Provider value={routerState}>\n      {children}\n    </RouterContext.Provider>\n  );\n}\n", "import React from \"react\";\nimport { Box } from \"ink\";\nimport { ErrorText } from \"../components/misc\";\nimport { Route, useRouter } from \"../Router\";\n\nimport Education from \"./Education\";\nimport Career from \"./Career\";\nimport Projects from \"./Projects\";\nimport About from \"./About\";\n\nfunction getPageComponent(route: Route) {\n  switch (route) {\n    case \"Education\":\n      return Education;\n    case \"Career\":\n      return Career;\n    case \"Projects\":\n      return Projects;\n    case \"About\":\n      return About;\n    default:\n      return ErrorText;\n  }\n}\n\nexport default function Page(): JSX.Element {\n  const [activeRoute] = useRouter();\n  const Component = getPageComponent(activeRoute);\n\n  return (\n    <Box marginTop={1}>\n      <Component />\n    </Box>\n  );\n}\n", "import React from \"react\";\nimport { Newline, Box, Text, TextProps } from \"ink\";\n\nexport function LoadingText(): JSX.Element {\n  return (\n    <Text dimColor>\n      {\"Loading...\"}\n      <Newline />\n    </Text>\n  );\n}\n\nexport function ErrorText({ error }: { error?: Error }): JSX.Element {\n  return (\n    <Text color=\"red\">\n      {error?.message || \"Data not available. Try again later.\"}\n      <Newline />\n    </Text>\n  );\n}\n\nexport function Divider({\n  width = 0,\n  ...props\n}: { width: number } & TextProps): JSX.Element | null {\n  const divider = \"\u2500\";\n  if (width < 0) return null;\n  return (\n    <Box width={\"100%\"}>\n      <Text {...props}>{Array(width).fill(divider).join(\"\")}</Text>\n    </Box>\n  );\n}\n", "import React from \"react\";\nimport { Box, Text } from \"ink\";\nimport useQuery from \"../helpers/useQuery\";\nimport DateLine from \"../components/DateLine\";\nimport { LoadingText, ErrorText } from \"../components/misc\";\n\ninterface EducationType {\n  degree: string;\n  field: string;\n  school: string;\n  startDate: string;\n  endDate?: string;\n  city: string;\n  country: string;\n  isCurrent: boolean;\n  slug: { current: string };\n}\n\nconst educationQuery = `* | [_type == \"education\"] | { slug, degree, field, school, isCurrent, startDate, endDate, \"city\": location -> city, \"country\": location -> country } | order(isCurrent desc, endDate desc)`;\n\nexport default function Education(): JSX.Element {\n  const { data, loading, error } = useQuery<EducationType[]>(educationQuery);\n\n  if (loading) return <LoadingText />;\n  if (error) return <ErrorText error={error} />;\n\n  return (\n    <Box flexDirection=\"column\">\n      {data?.map((eduction) => (\n        <EducationItem key={eduction.slug.current} {...eduction} />\n      ))}\n    </Box>\n  );\n}\n\nfunction EducationItem(eduction: EducationType): JSX.Element {\n  const { slug, isCurrent, degree, school, field } = eduction;\n  const { city, country, startDate, endDate } = eduction;\n  return (\n    <Box key={slug.current} flexDirection=\"column\" marginBottom={1} marginX={1}>\n      <Text color={isCurrent ? \"green\" : \"yellow\"}>\n        {degree} - {field}\n      </Text>\n\n      <Text bold>{school}</Text>\n\n      <DateLine\n        {...{ startDate, endDate }}\n        additionalText={`${city}, ${country}`}\n      />\n    </Box>\n  );\n}\n", "import { useState, useEffect } from \"react\";\nimport { AbortController } from \"node-abort-controller\";\nimport fetch from \"node-fetch\";\n\nexport default function useQuery<T>(query: string) {\n  const encodedQuery = encodeURIComponent(query);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState<Error | null>(null);\n  const [data, setData] = useState<T | undefined>(undefined);\n\n  useEffect(() => {\n    setLoading(true);\n    setError(null);\n    let isMounted = true;\n    const controller = new AbortController();\n\n    fetcher(encodedQuery, controller)\n      .then((data: any) => {\n        if (isMounted) setData(data as T);\n      })\n      .catch((e) => {\n        if (isMounted) setError(new Error(e));\n      })\n      .finally(() => {\n        if (isMounted) setLoading(false);\n      });\n\n    return () => {\n      isMounted = false;\n      controller.abort();\n    };\n  }, [encodedQuery]);\n\n  return { data, loading, error };\n}\n\nconst cache: Record<string, { data: any; timestamp: number }> = {};\nconst CACHE_TIME = 60 * 60; // 1 hour\n\nasync function fetcher(query: string, controller: AbortController) {\n  try {\n    return getFromCache(query);\n  } catch {\n    return fetchFromServer(query, controller);\n  }\n}\n\nasync function fetchFromServer(query: string, { signal }: AbortController) {\n  const res = await fetch(\n    \"https://lxjtqhm1.api.sanity.io/v1/data/query/production?query=\" + query,\n    { signal }\n  );\n  const data = ((await res.json()) as any).result;\n  cache[query] = { data, timestamp: Date.now() };\n  return data;\n}\n\nfunction getFromCache(key: string) {\n  const cacheValue = cache[key];\n  if (cacheValue?.data) {\n    const isValid = Date.now() - cacheValue.timestamp <= CACHE_TIME;\n    if (isValid) {\n      return cacheValue.data;\n    }\n  }\n  throw new Error(\"No cache found.\");\n}\n", "import React from \"react\";\nimport { Text } from \"ink\";\n\nexport default function DateLine({\n  startDate,\n  endDate,\n  additionalText,\n}: {\n  startDate: string;\n  endDate?: string;\n  additionalText?: string;\n}) {\n  const start = startDate.slice(0, 7);\n  const end = endDate?.slice(0, 7) || \"current\";\n  return (\n    <Text dimColor>\n      {start} - {end}\n      {additionalText ? ` | ${additionalText}` : \"\"}\n    </Text>\n  );\n}\n", "import React from \"react\";\nimport { Box, Text } from \"ink\";\n\nimport useQuery from \"../helpers/useQuery\";\nimport DateLine from \"../components/DateLine\";\nimport { LoadingText, ErrorText } from \"../components/misc\";\n\ninterface CareerType {\n  position: string;\n  company: string;\n  type: string;\n  startDate: string;\n  endDate?: string;\n  city: string;\n  country: string;\n  isCurrent: boolean;\n  slug: { current: string };\n}\n\nconst careerQuery = `* | [_type == \"career\"] | { slug, position, type, company, isCurrent, startDate, endDate, \"city\": location -> city, \"country\": location -> country,} | order(isCurrent desc, endDate desc)`;\n\nexport default function Career(): JSX.Element {\n  const { data, loading, error } = useQuery<CareerType[]>(careerQuery);\n\n  if (loading) return <LoadingText />;\n  if (error) return <ErrorText error={error} />;\n\n  return (\n    <Box flexDirection=\"column\">\n      {data?.map((career) => (\n        <CareerItem key={career.slug.current} {...career} />\n      ))}\n    </Box>\n  );\n}\n\nfunction CareerItem(career: CareerType): JSX.Element {\n  const { slug, isCurrent, position, company, city } = career;\n  const { country, type, startDate, endDate } = career;\n  return (\n    <Box key={slug.current} flexDirection=\"column\" marginBottom={1} marginX={1}>\n      <Text color={isCurrent ? \"green\" : \"yellow\"}>{position}</Text>\n      <Text>\n        <Text bold>{company}</Text>, {city}, {country}\n      </Text>\n      <DateLine {...{ startDate, endDate }} additionalText={type} />\n    </Box>\n  );\n}\n", "import React from \"react\";\nimport { Box, Text } from \"ink\";\n\nimport useQuery from \"../helpers/useQuery\";\nimport DateLine from \"../components/DateLine\";\nimport { LoadingText, ErrorText } from \"../components/misc\";\n\ninterface ProjectType {\n  title: string;\n  startDate: string;\n  endDate?: string;\n  isCurrent: boolean;\n  association: string;\n  slug: { current: string };\n  tags: string[];\n}\n\nconst projectsQuery = `* | [_type == \"project\"] | { slug, title, \"tags\": tags[] -> value, isCurrent, startDate, endDate, \"association\": association -> company } | order(isCurrent desc, endDate desc)`;\n\nexport default function Projects(): JSX.Element {\n  const { data, loading, error } = useQuery<ProjectType[]>(projectsQuery);\n\n  if (loading) return <LoadingText />;\n  if (error) return <ErrorText error={error} />;\n\n  return (\n    <Box flexDirection=\"column\">\n      {data?.map((career) => (\n        <CareerItem key={career.slug.current} {...career} />\n      ))}\n    </Box>\n  );\n}\n\nfunction CareerItem(career: ProjectType): JSX.Element {\n  const { slug, title, association, tags = [] } = career;\n  const { isCurrent, startDate, endDate } = career;\n  return (\n    <Box key={slug.current} flexDirection=\"column\" marginBottom={1} marginX={1}>\n      <Text color={isCurrent ? \"green\" : \"yellow\"}>{title}</Text>\n      <Text>\n        <Text>{association}</Text>\n      </Text>\n      <DateLine {...{ startDate, endDate }} additionalText={tags.join(\", \")} />\n    </Box>\n  );\n}\n", "import React from \"react\";\nimport { Box, Text } from \"ink\";\n\nconst about = `Ever since I could first remember, I\u2019ve been fascinated by how things work. While it took me some time to discover my zeal for design, I haven\u2019t stopped pursuing it ever since. Started with self-taught graphical design and then advanced on to visual and interface design overtime. With a professional education in hand, I expanded to tackling user/customer experience design. \n\nI acquainted myself with research, development, business, and management to better understand the implications, communicate well with all parties involved. This also led me to become a better designer in the process.\n\nIf I had to describe myself in one word, that\u2019d be STALWART.\n`;\n\nconst contact = `Website:  https://guptasiddhant.com\nGitHub:   https://github.com/guptasiddhant\nLinkedIn: https://linkedin.com/in/guptasiddhant9\nEmail:    me@guptasiddhant.com`;\n\nexport default function About(): JSX.Element {\n  return (\n    <Box marginBottom={1} marginX={1} flexDirection=\"column\">\n      <Text>{about}</Text>\n      <Text dimColor>{contact}</Text>\n    </Box>\n  );\n}\n", "import { useEffect, useRef, useState } from \"react\";\nimport { measureElement, DOMElement } from \"ink\";\n\nexport default function useBoxWidth() {\n  const ref = useRef<DOMElement>(null);\n  const [width, setWidth] = useState(0);\n\n  useEffect(() => {\n    if (ref.current) {\n      const { width } = measureElement(ref.current);\n      setWidth(width);\n    }\n  }, [ref]);\n\n  return { ref, width };\n}\n"],
  "mappings": "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",
  "names": []
}
